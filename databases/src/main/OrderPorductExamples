package org.perscholas.databases;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class OrderProductsExample {

    public static void main(String[] args) {
        String dburl = "jdbc:mysql://192.168.2.100:3306/classic_models";
        String user = "dev";
        String password = "ultra30dev";

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter an order number: ");
        int orderNumber = scanner.nextInt();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // optional
            connection = DriverManager.getConnection(dburl, user, password);

            String query = "SELECT "
                    + "productCode, "
                    + "productName, "
                    + "quantityOrdered, "
                    + "MSRP, "
                    + "buyPrice, "
                    + "(MSRP - buyPrice) AS margin, "
                    + "(quantityOrdered * (MSRP - buyPrice)) AS totalMargin "
                    + "FROM orderdetails "
                    + "INNER JOIN products ON orderdetails.productCode = products.productCode "
                    + "WHERE orderNumber = ?";

            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, orderNumber);

            resultSet = preparedStatement.executeQuery();

            System.out.println("Product Code | Product Name | Quantity Ordered | MSRP | Buy Price | Margin | Total Margin");
            while (resultSet.next()) {
                String productCode = resultSet.getString("productCode");
                String productName = resultSet.getString("productName");
                int quantityOrdered = resultSet.getInt("quantityOrdered");
                double msrp = resultSet.getDouble("MSRP");
                double buyPrice = resultSet.getDouble("buyPrice");
                double margin = resultSet.getDouble("margin");
                double totalMargin = resultSet.getDouble("totalMargin");

                System.out.printf("%-12s | %-25s | %15d | %5.2f | %7.2f | %5.2f | %11.2f%n",
                        productCode, productName, quantityOrdered, msrp, buyPrice, margin, totalMargin);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (resultSet != null) resultSet.close();
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}


// 1) Create a connection to the database classic_models
	// 2) Use the scanner to take input of an order number
	// 3) Write a query using a prepared statement to print out the product_id, product name,
	//    quantity ordered, msrp, buy_price, margin (msrp-buy_price), and total margin (margin * quantity ordered)
	// try to make the output look nice

	// DOUBLE BONUS
	// 4) use a variable to calculate the total margin for the entire order (all products)